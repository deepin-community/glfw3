libglfw.so.3 libglfw3-wayland #MINVER#
* Build-Depends-Package: libglfw3-dev
#include "libglfw3.symbols.common"
 glfwGetWaylandDisplay@Base 3.2
 glfwGetWaylandMonitor@Base 3.2
 glfwGetWaylandWindow@Base 3.2
# Although not part of the glfw API, these objects must be exported because
# Wayland expects them to always point to the same address within any executable
# (among other libraries etc). They can be dropped without breaking the ABI
# since noone else should be using them at all...
 (optional=wayland)wp_viewport_interface@Base 3.3
 (optional=wayland)wp_viewporter_interface@Base 3.3
 (optional=wayland)xdg_popup_interface@Base 3.3
 (optional=wayland)xdg_positioner_interface@Base 3.3
 (optional=wayland)xdg_surface_interface@Base 3.3
 (optional=wayland)xdg_toplevel_interface@Base 3.3
 (optional=wayland)xdg_wm_base_interface@Base 3.3
 (optional=wayland)zwp_confined_pointer_v1_interface@Base 3.2
 (optional=wayland)zwp_idle_inhibit_manager_v1_interface@Base 3.3
 (optional=wayland)zwp_idle_inhibitor_v1_interface@Base 3.3
 (optional=wayland)zwp_locked_pointer_v1_interface@Base 3.2
 (optional=wayland)zwp_pointer_constraints_v1_interface@Base 3.2
 (optional=wayland)zwp_relative_pointer_manager_v1_interface@Base 3.2
 (optional=wayland)zwp_relative_pointer_v1_interface@Base 3.2
 (optional=wayland)zxdg_decoration_manager_v1_interface@Base 3.3
 (optional=wayland)zxdg_toplevel_decoration_v1_interface@Base 3.3
